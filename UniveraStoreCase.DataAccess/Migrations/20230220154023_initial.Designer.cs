// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniveraStoreCase.DataAccess.Data;

#nullable disable

namespace UniveraStoreCase.DataAccess.Migrations
{
    [DbContext(typeof(UniveraDbContext))]
    [Migration("20230220154023_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoryBrands");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoryColors");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryFuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FuelType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoryFuelTypes");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryVehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CategoryVehicleTypes");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.ToTable("CategoryYears");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryColorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryFuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryVehicleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryYearId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryBrandId");

                    b.HasIndex("CategoryColorId");

                    b.HasIndex("CategoryFuelTypeId");

                    b.HasIndex("CategoryVehicleTypeId");

                    b.HasIndex("CategoryYearId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.Product", b =>
                {
                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryBrand", "CategoryBrand")
                        .WithMany("Product")
                        .HasForeignKey("CategoryBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryColor", "CategoryColor")
                        .WithMany("Product")
                        .HasForeignKey("CategoryColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryFuelType", "CategoryFuelType")
                        .WithMany("Product")
                        .HasForeignKey("CategoryFuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryVehicleType", "CategoryVehicleType")
                        .WithMany("Product")
                        .HasForeignKey("CategoryVehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryYear", "CategoryYear")
                        .WithMany("Product")
                        .HasForeignKey("CategoryYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryBrand");

                    b.Navigation("CategoryColor");

                    b.Navigation("CategoryFuelType");

                    b.Navigation("CategoryVehicleType");

                    b.Navigation("CategoryYear");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryBrand", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryColor", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryFuelType", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryVehicleType", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryYear", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
