// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniveraStoreCase.DataAccess.Data;

#nullable disable

namespace UniveraStoreCase.DataAccess.Migrations
{
    [DbContext(typeof(UniveraDbContext))]
    [Migration("20230220205348_DataSeed2")]
    partial class DataSeed2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoryBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Volkswagen",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Fiat",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Renault",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Ford",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Ferrari",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Skoda",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Man",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Audi",
                            ProductId = 0,
                            Status = false
                        });
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoryColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Beyaz",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            Color = "Siyah",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            Color = "Gri",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            Color = "Mavi",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            Color = "Sarı",
                            ProductId = 0,
                            Status = false
                        });
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryFuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FuelType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoryFuelTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FuelType = "Benzin",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            FuelType = "Dizel",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            FuelType = "LPG",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            FuelType = "Hibrit",
                            ProductId = 0,
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            FuelType = "Elektrik",
                            ProductId = 0,
                            Status = false
                        });
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryVehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CategoryVehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 0,
                            Status = false,
                            VehicleType = "Hususi"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 0,
                            Status = false,
                            VehicleType = "Ticari"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 0,
                            Status = false,
                            VehicleType = "Kamyonet"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 0,
                            Status = false,
                            VehicleType = "Spor"
                        });
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CategoryYears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 0,
                            Status = false,
                            Year = 1990
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 0,
                            Status = false,
                            Year = 1991
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 0,
                            Status = false,
                            Year = 1992
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 0,
                            Status = false,
                            Year = 1993
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 0,
                            Status = false,
                            Year = 1994
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 0,
                            Status = false,
                            Year = 1995
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 0,
                            Status = false,
                            Year = 1996
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 0,
                            Status = false,
                            Year = 1997
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 0,
                            Status = false,
                            Year = 1998
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 0,
                            Status = false,
                            Year = 1999
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 0,
                            Status = false,
                            Year = 2000
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 0,
                            Status = false,
                            Year = 2001
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 0,
                            Status = false,
                            Year = 2002
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 0,
                            Status = false,
                            Year = 2003
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 0,
                            Status = false,
                            Year = 2004
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 0,
                            Status = false,
                            Year = 2005
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 0,
                            Status = false,
                            Year = 2006
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 0,
                            Status = false,
                            Year = 2007
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 0,
                            Status = false,
                            Year = 2008
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 0,
                            Status = false,
                            Year = 2009
                        },
                        new
                        {
                            Id = 21,
                            ProductId = 0,
                            Status = false,
                            Year = 2010
                        },
                        new
                        {
                            Id = 22,
                            ProductId = 0,
                            Status = false,
                            Year = 2011
                        },
                        new
                        {
                            Id = 23,
                            ProductId = 0,
                            Status = false,
                            Year = 2012
                        },
                        new
                        {
                            Id = 24,
                            ProductId = 0,
                            Status = false,
                            Year = 2013
                        },
                        new
                        {
                            Id = 25,
                            ProductId = 0,
                            Status = false,
                            Year = 2014
                        },
                        new
                        {
                            Id = 26,
                            ProductId = 0,
                            Status = false,
                            Year = 2015
                        },
                        new
                        {
                            Id = 27,
                            ProductId = 0,
                            Status = false,
                            Year = 2016
                        },
                        new
                        {
                            Id = 28,
                            ProductId = 0,
                            Status = false,
                            Year = 2017
                        },
                        new
                        {
                            Id = 29,
                            ProductId = 0,
                            Status = false,
                            Year = 2018
                        },
                        new
                        {
                            Id = 30,
                            ProductId = 0,
                            Status = false,
                            Year = 2019
                        },
                        new
                        {
                            Id = 31,
                            ProductId = 0,
                            Status = false,
                            Year = 2020
                        },
                        new
                        {
                            Id = 32,
                            ProductId = 0,
                            Status = false,
                            Year = 2021
                        },
                        new
                        {
                            Id = 33,
                            ProductId = 0,
                            Status = false,
                            Year = 2022
                        },
                        new
                        {
                            Id = 34,
                            ProductId = 0,
                            Status = false,
                            Year = 2023
                        });
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryColorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryFuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryVehicleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryYearId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryBrandId");

                    b.HasIndex("CategoryColorId");

                    b.HasIndex("CategoryFuelTypeId");

                    b.HasIndex("CategoryVehicleTypeId");

                    b.HasIndex("CategoryYearId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryBrandId = 6,
                            CategoryColorId = 1,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 15,
                            Description = "Sahibinden Temiz Skoda Fabia, Kazasız. 2004 model tdi 75hp.",
                            Name = "Satılık Skoda Fabia",
                            Price = 175000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryBrandId = 2,
                            CategoryColorId = 1,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 17,
                            Description = "2006 Model az kullanılmış Fiat Punto",
                            Name = "Satılık Fiat Punto",
                            Price = 250000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryBrandId = 1,
                            CategoryColorId = 1,
                            CategoryFuelTypeId = 2,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 11,
                            Description = "2000 Model hasarsız Merceses",
                            Name = "Satılık Mercedes E200",
                            Price = 700000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryBrandId = 8,
                            CategoryColorId = 2,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 26,
                            Description = "2015 Model satılık Audi A8",
                            Name = "Satılık Audi A8",
                            Price = 750000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            CategoryBrandId = 8,
                            CategoryColorId = 2,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 24,
                            Description = "2013 Model satılık Audi A6",
                            Name = "Satılık Audi A6",
                            Price = 650000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            CategoryBrandId = 3,
                            CategoryColorId = 3,
                            CategoryFuelTypeId = 4,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 1,
                            Description = "Uygun fiyatlı Renault Clio",
                            Name = "Satılık Renault Clio",
                            Price = 350000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 7,
                            CategoryBrandId = 4,
                            CategoryColorId = 3,
                            CategoryFuelTypeId = 2,
                            CategoryVehicleTypeId = 2,
                            CategoryYearId = 1,
                            Description = "Ford Transit hasarsız, ay yakıt harcar.",
                            Name = "Satılık Ford Transit",
                            Price = 450000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            CategoryBrandId = 3,
                            CategoryColorId = 4,
                            CategoryFuelTypeId = 3,
                            CategoryVehicleTypeId = 2,
                            CategoryYearId = 19,
                            Description = "2008 Model Reanult Kangoo satılıktır.",
                            Name = "Satılık Renault Kangoo",
                            Price = 150000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 9,
                            CategoryBrandId = 4,
                            CategoryColorId = 4,
                            CategoryFuelTypeId = 3,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 1,
                            Description = "Doktordan temiz Ford Fiesta satılık",
                            Name = "Satılık Ford Fiesta",
                            Price = 200000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 10,
                            CategoryBrandId = 7,
                            CategoryColorId = 4,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 3,
                            CategoryYearId = 27,
                            Description = "Satılık Man marka Kamyon 2016 model.",
                            Name = "Satılık Man TGA",
                            Price = 1750000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 11,
                            CategoryBrandId = 5,
                            CategoryColorId = 5,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 4,
                            CategoryYearId = 1,
                            Description = "Satılık Ferrari 812 GTS. Spor model.",
                            Name = "Satılık Ferrari 812 GTS.",
                            Price = 17500000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 12,
                            CategoryBrandId = 1,
                            CategoryColorId = 5,
                            CategoryFuelTypeId = 5,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 22,
                            Description = "2011 model VolksWagen Golf satılık. ",
                            Name = "Satılık Volkswagen Golf",
                            Price = 600000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 13,
                            CategoryBrandId = 1,
                            CategoryColorId = 5,
                            CategoryFuelTypeId = 5,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 1,
                            Description = "Wolskwagen passat hasar kayıtsız.",
                            Name = "Satılık Volkswagen Passat",
                            Price = 800000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 14,
                            CategoryBrandId = 1,
                            CategoryColorId = 1,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 1,
                            Description = "110 beygir Volkswage Polo satılık araç.",
                            Name = "Satılık Volkswagen Polo",
                            Price = 380000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 15,
                            CategoryBrandId = 6,
                            CategoryColorId = 1,
                            CategoryFuelTypeId = 1,
                            CategoryVehicleTypeId = 1,
                            CategoryYearId = 29,
                            Description = "Üst sınıf Skoda Superb 2018 model satılık araç.",
                            Name = "Satılık Skoda Superb",
                            Price = 550000m,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        });
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.Product", b =>
                {
                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryBrand", "CategoryBrand")
                        .WithMany("Product")
                        .HasForeignKey("CategoryBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryColor", "CategoryColor")
                        .WithMany("Product")
                        .HasForeignKey("CategoryColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryFuelType", "CategoryFuelType")
                        .WithMany("Product")
                        .HasForeignKey("CategoryFuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryVehicleType", "CategoryVehicleType")
                        .WithMany("Product")
                        .HasForeignKey("CategoryVehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniveraStoreCase.Entities.Entities.CategoryYear", "CategoryYear")
                        .WithMany("Product")
                        .HasForeignKey("CategoryYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryBrand");

                    b.Navigation("CategoryColor");

                    b.Navigation("CategoryFuelType");

                    b.Navigation("CategoryVehicleType");

                    b.Navigation("CategoryYear");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryBrand", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryColor", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryFuelType", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryVehicleType", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("UniveraStoreCase.Entities.Entities.CategoryYear", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
